** Binary Tree
1. Hierarchical Data Structure
2. Topmost element is known as the root of the Tree
3. Every node can have atmost two childrens
4. Can't access elements randomly using index
5. Ex. File system hierarchy
6. common traversal methods
    a. Preorder Traversal: print-left-right
    b. Postorder Traversal: left-right-print
    c. Inorder Traversal: left-print-right


** Applications:
1. File System hierarchy
2. Multiple vairiations of binary tree has wide variety of applications


** Binary Tree Implementation
1. Inorder Traversal
2. Preorder Traversal 
3. Postorder Traversal


1. Preorder Traversal - root-left-right

        1
        /\
       2  3
      /\   \
     4  5   6

1, 2, 4, 5, 3, 6

2. Postorder Traversal - left-right-root

        1
        /\
       2  3
      /\   \
     4  5   6

4, 5, 2, 6, 3, 1

3. Inorder Traversal - left-root-right

        1
        /\
       2  3
      /\   \
     4  5   6

4, 2, 5, 1, 3, 6


** Advantages:
1. Can represent data in some relationship
2. Insertion and search are more efficient

** Disadvantages
1. Sort is difficult
2. Not more flexible
